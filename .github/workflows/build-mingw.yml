name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:

jobs:
  build:
    strategy:
      matrix:
        compiler:
        - {
            name: "msvc2019",
            DirectXMath: "https://github.com/dirkarnez/DirectXMath-prebuilt/releases/download/dec2022/DirectXMath-dec2022-msvc2019.zip"
          }

        # - {
        #     name: "x86_64-8.1.0-release-posix-seh-rt_v6-rev0",
        #     url: "https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z",
        #     DirectXMath: "https://github.com/dirkarnez/DirectXMath-prebuilt/releases/download/dec2022/DirectXMath-dec2022-x86_64-8.1.0-release-posix-seh-rt_v6-rev0.zip"
        #   }
        # - {
        #     name: "winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1",
        #     url: "https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-12.0.1-9.0.0-r1/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip",
        #     DirectXMath: "https://github.com/dirkarnez/DirectXMath-prebuilt/releases/download/dec2022/DirectXMath-dec2022-winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip"
        #   }
          
    runs-on: windows-latest
    env:
      libraryName: DirectXTK
      cmakeInstallationPath: DirectXTK-installation
      tagName: sept2023
    steps:
      - name: git clone
        shell: cmd
        run: git clone --recurse-submodules https://github.com/microsoft/DirectXTK.git && cd DirectXTK && git checkout ${{ env.tagName }}

      - uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
        with:
          sdk-version: 17763

      - shell: cmd
        run: |
          cd /d "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64" &&^
          dir /s
          
      - name: download compiler
        if: ${{  matrix.compiler.url }}
        shell: cmd
        run: |
          curl ${{ matrix.compiler.url }} -L --output compiler &&^
          7z.exe x compiler
          
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip

      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
      
      - name: curl DirectXMath
        shell: cmd
        run: |
          curl ${{ matrix.compiler.DirectXMath }} -L --output DirectXMath.zip &&^
          7z.exe x DirectXMath.zip -o"DirectXMath"
          
      # - name: set PATH, check mingw version, cmake generate, build and install
      #   if: ${{  matrix.compiler.url }}
      #   shell: cmd
      #   run: |
      #       set PATH=^
      #       ${{ github.workspace }}\mingw64;^
      #       ${{ github.workspace }}\mingw64\bin;^
      #       ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;^
      #       C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64;
      #       set CD_LINUX=%CD:\=/%
      #       gcc --version &&^
      #       cd DirectXTK &&^
      #       cmake.exe -G"MinGW Makefiles" ^
      #       -DCMAKE_BUILD_TYPE=Release ^
      #       -DBUILD_SHARED_LIBS=OFF ^
      #       -DBUILD_XAUDIO_WIN10=OFF ^
      #       -DBUILD_XAUDIO_WIN8=OFF ^
      #       -DBUILD_XAUDIO_WIN7=OFF ^
      #       -Ddirectxmath_DIR="%CD_LINUX%/DirectXMath/share/directxmath" ^
      #       -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
      #       cd cmake-build && cmake --build . && cmake --install . 

      - name: set PATH, check mingw version, cmake generate, build and install
        if: ${{  !matrix.compiler.url }}
        shell: cmd
        run: |
            set PATH=^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;^
            C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64;
            set CD_LINUX=%CD:\=/%
            cd DirectXTK &&^
            cmake.exe -G "Visual Studio 17 2022" -A x64 ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DBUILD_SHARED_LIBS=OFF ^
            -DBUILD_XAUDIO_WIN10=OFF ^
            -DBUILD_XAUDIO_WIN8=OFF ^
            -DBUILD_XAUDIO_WIN7=OFF ^
            -Ddirectxmath_DIR="%CD_LINUX%/DirectXMath/share/directxmath" ^
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
            cd cmake-build && cmake --build . && dir && cmake --install . 
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "DirectXTK/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: "DirectXTK-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
        
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "DirectXTK/cmake-build/${{ env.cmakeInstallationPath }}/DirectXTK-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
